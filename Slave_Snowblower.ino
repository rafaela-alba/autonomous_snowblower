/*MECH 4850 - Spring 2021Snowblower Controlled By JoystickBluetooth Slave*/#define enA 5#define in1 7#define in2 8#define enB 6#define in3 9#define in4 10#define enC 11#define in5 12#define in6 13int xAxis, yAxis, button, z;unsigned int x = 0;unsigned int y = 0;int motorSpeedA = 0;  //Left motor (looking from the back)int motorSpeedB = 0;  //Right motor (looking from the back)int motorSpeedC = 0;  //Impeller/Auger motorvoid setup() {  pinMode(enA, OUTPUT);    pinMode(enB, OUTPUT);  pinMode(enC, OUTPUT);   pinMode(in1, OUTPUT);   pinMode(in2, OUTPUT);   pinMode(in3, OUTPUT);   pinMode(in4, OUTPUT);   pinMode(in5, OUTPUT);   pinMode(in6, OUTPUT);    Serial.begin(38400);  // Default communication rate of the Bluetooth module}void loop() {  //Read the incoming data from the Joystick, or the master Bluetooth device  while (Serial.available() >= 3) {    x = Serial.read();    delay(10);    y = Serial.read();    delay(10);    z = Serial.read()  }  delay(10);  // Convert back the 0 - 255 range to 0 - 1023, suitable for motor control code below  xAxis = x*4;  yAxis = y*4;  button = z;    if (button == HIGH);{    //Set Motor C (auger/impeller) counterclockwise    digitalWrite(in5, HIGH);    digitalWrite(in6, LOW);    motorSpeedC = 200;    //Y-axis used for forward and backward control    if(yAxis < 470) {      //Set Motor A backward      digitalWrite(in1, LOW);      digitalWrite(in2, HIGH);      //Set Motor B backward      digitalWrite(in3, HIGH);      digitalWrite(in4, LOW);      // Convert the decling Y-axis for going backward from 470 to 0 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 470, 0, 0, 200);      motorSpeedB = map(yAxis, 470, 0, 0, 200);    }    else if (yAxis > 550) {      //Set Motor A forward      digitalWrite(in1, HIGH);      digitalWrite(in2, LOW);      //Set Motor B forward      digitalWrite(in3, LOW);      digitalWrite(in4, HIGH);      // Convert the decling Y-axis for going backward from 50 to 1023 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 550, 1023, 0, 200);      motorSpeedB = map(yAxis, 550, 1023, 0, 200);    }    // If joystick stays in middle the motors are not moving    else {      motorSpeedA = 0;      motorSpeedB = 0;    }      //X-axis used for left and right control    if(xAxis < 470) {      //Set Motor A backward      digitalWrite(in1, LOW);      digitalWrite(in2, HIGH);      //Set Motor B forward      digitalWrite(in3, LOW);      digitalWrite(in4, HIGH);      // Convert the decling X-axis for going backward from 470 to 0 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(xAxis, 470, 0, 0, 200);      motorSpeedB = map(xAxis, 470, 0, 0, 200);    }    else if (xAxis > 550) {      //Set Motor A forward      digitalWrite(in1, HIGH);      digitalWrite(in2, LOW);      //Set Motor B backward      digitalWrite(in3, HIGH);      digitalWrite(in4, LOW);      // Convert the decling Y-axis for going backward from 50 to 1023 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 550, 1023, 0, 200);      motorSpeedB = map(yAxis, 550, 1023, 0, 200);    }    // If joystick stays in middle the motors are not moving    else {      motorSpeedA = 0;      motorSpeedB = 0;    }    // Prevent buzzing at low speeds (Adjust according to each motor)    if (motorSpeedA < 70) {      motorSpeedA = 0;    }    if (motorSpeedB < 70) {      motorSpeedB = 0;    }    analogWrite(enA, motorSpeedA); //Send PWM signal to motor A    analogWrite(enB, motorSpeedB); //Send PWM signal to motor B    analogWrite(enC, motorSpeedC); //Send PWM signal to motor C      }      else {    //Y-axis used for forward and backward control    if(yAxis < 470) {      //Set Motor A backward      digitalWrite(in1, LOW);      digitalWrite(in2, HIGH);      //Set Motor B backward      digitalWrite(in3, HIGH);      digitalWrite(in4, LOW);      // Convert the decling Y-axis for going backward from 470 to 0 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 470, 0, 0, 200);      motorSpeedB = map(yAxis, 470, 0, 0, 200);    }    else if (yAxis > 550) {      //Set Motor A forward      digitalWrite(in1, HIGH);      digitalWrite(in2, LOW);      //Set Motor B forward      digitalWrite(in3, LOW);      digitalWrite(in4, HIGH);      // Convert the decling Y-axis for going backward from 50 to 1023 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 550, 1023, 0, 200);      motorSpeedB = map(yAxis, 550, 1023, 0, 200);    }    // If joystick stays in middle the motors are not moving    else {      motorSpeedA = 0;      motorSpeedB = 0;    }      //X-axis used for left and right control    if(xAxis < 470) {      //Set Motor A backward      digitalWrite(in1, LOW);      digitalWrite(in2, HIGH);      //Set Motor B forward      digitalWrite(in3, LOW);      digitalWrite(in4, HIGH);      // Convert the decling X-axis for going backward from 470 to 0 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(xAxis, 470, 0, 0, 200);      motorSpeedB = map(xAxis, 470, 0, 0, 200);    }    else if (xAxis > 550) {      //Set Motor A forward      digitalWrite(in1, HIGH);      digitalWrite(in2, LOW);      //Set Motor B backward      digitalWrite(in3, HIGH);      digitalWrite(in4, LOW);      // Convert the decling Y-axis for going backward from 50 to 1023 into 0 to 255 value for the PWM signal for increasing the motor speed      motorSpeedA = map(yAxis, 550, 1023, 0, 200);      motorSpeedB = map(yAxis, 550, 1023, 0, 200);    }    // If joystick stays in middle the motors are not moving    else {      motorSpeedA = 0;      motorSpeedB = 0;    }    // Prevent buzzing at low speeds (Adjust according to each motor)    if (motorSpeedA < 70) {      motorSpeedA = 0;    }    if (motorSpeedB < 70) {      motorSpeedB = 0;    }    analogWrite(enA, motorSpeedA); //Send PWM signal to motor A    analogWrite(enB, motorSpeedB); //Send PWM signal to motor B  }}